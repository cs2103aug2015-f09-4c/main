diff a/Storage/PhysicalStorageHandler.cpp b/Storage/PhysicalStorageHandler.cpp	(rejected hunks)
@@ -10,47 +10,48 @@
 
 void PhysicalStorageHandler::loadFromFile(std::vector<API::Task>& tasks, std::string filePath) {
 	tasks.clear();
-	std::string identityString;
 	std::ifstream loadFile(filePath.c_str());
 	if (loadFile.is_open()) {
-		std::getline(loadFile, identityString);
-		while (identityString != end)
+
+		while (!loadFile.eof())
 		{
 			std::string taskText;
 			std::string startDateTimeString;
 			std::string endDateTimeString;
+			std::string tagsString;
+			std::string tag;
 			std::string isCompleteString;
 
-			std::getline(loadFile,taskText);
+			std::getline(loadFile, taskText);
 			if (taskText.empty()) {
 				break;
 			}
 
-			std::getline(loadFile,startDateTimeString);
+			std::getline(loadFile, startDateTimeString);
 			boost::posix_time::ptime startDateTime;
 			if (startDateTimeString != "not-a-date-time") {
 				startDateTime = boost::posix_time::time_from_string(startDateTimeString);
 			}
 
-			std::getline(loadFile,endDateTimeString);
+			std::getline(loadFile, endDateTimeString);
 			boost::posix_time::ptime endDateTime;
 			if (endDateTimeString != "not-a-date-time") {
 				endDateTime = boost::posix_time::time_from_string(endDateTimeString);
 			}
 
+			std::getline(loadFile, tagsString);
+			std::istringstream tagsDataLine(tagsString);
+
 			std::getline(loadFile, isCompleteString);
 
 			API::Task taskToAdd(taskText, startDateTime, endDateTime);
+			while (tagsDataLine >> tag) {
+				taskToAdd.addTag(tag);
+			}
 			if (isCompleteString == "1") {
 				taskToAdd.toggleComplete();
 			}
 
-			std::getline(loadFile, identityString);
-			while (identityString != start && identityString != end) {
-				taskToAdd.addTag(identityString);
-				std::getline(loadFile, identityString);
-			}
-
 			tasks.push_back(taskToAdd);
 		}
 	}
